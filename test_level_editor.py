#!/usr/bin/env python3
"""
Simple Level Editor Test - –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç Level Editor

–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã ImGui —Å –Ω–∞—à–∏–º –¥–≤–∏–∂–∫–æ–º.
"""

import sys
import os
import pygame
import imgui
from imgui.integrations.pygame import PygameRenderer

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç–∏
project_root = os.path.abspath(os.path.join(os.path.dirname(__file__), '..'))
sys.path.insert(0, project_root)
sys.path.insert(0, os.path.join(project_root, 'src'))

def main():
    print("üöÄ –ó–∞–ø—É—Å–∫ Level Editor Test...")
    
    try:
        pygame.init()
        print("‚úÖ Pygame –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        
        size = 1200, 800
        screen = pygame.display.set_mode(size, pygame.RESIZABLE)
        pygame.display.set_caption("Level Editor Test")
        print("‚úÖ –û–∫–Ω–æ —Å–æ–∑–¥–∞–Ω–æ")
        
        imgui.create_context()
        print("‚úÖ ImGui –∫–æ–Ω—Ç–µ–∫—Å—Ç —Å–æ–∑–¥–∞–Ω")
        
        renderer = PygameRenderer()
        print("‚úÖ Renderer —Å–æ–∑–¥–∞–Ω")
        
        io = imgui.get_io()
        io.display_size = size
        io.fonts.get_tex_data_as_rgba32()
        print("‚úÖ ImGui –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
        
        clock = pygame.time.Clock()
        running = True
        show_demo = True
        
        print("üéØ –ì–ª–∞–≤–Ω—ã–π —Ü–∏–∫–ª...")
        frame_count = 0
        
        while running:
            frame_count += 1
            if frame_count % 60 == 0:  # –ö–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É
                print(f"Frame {frame_count}, FPS: {clock.get_fps():.1f}")
                
            for event in pygame.event.get():
                if event.type == pygame.QUIT:
                    print("‚ùå –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª QUIT")
                    running = False
                elif event.type == pygame.KEYDOWN:
                    if event.key == pygame.K_ESCAPE:
                        print("‚ùå –ù–∞–∂–∞—Ç–∞ ESC")
                        running = False
                renderer.process_event(event)
                
            renderer.process_inputs()
            imgui.new_frame()
            
            # –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
            if imgui.begin_main_menu_bar():
                if imgui.begin_menu("File"):
                    if imgui.menu_item("Exit")[0]:
                        print("‚ùå Exit –∏–∑ –º–µ–Ω—é")
                        running = False
                    imgui.end_menu()
                if imgui.begin_menu("Window"):
                    clicked, show_demo = imgui.menu_item("ImGui Demo", selected=show_demo)
                    imgui.end_menu()
                imgui.end_main_menu_bar()
                
            # Demo –æ–∫–Ω–æ
            if show_demo:
                show_demo = imgui.show_demo_window()
                
            # –ü—Ä–æ—Å—Ç–æ–µ –æ–∫–Ω–æ
            if imgui.begin("Level Editor Test"):
                imgui.text("‚úÖ ImGui —Ä–∞–±–æ—Ç–∞–µ—Ç!")
                imgui.text("‚úÖ Pygame –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç!")
                imgui.text("‚úÖ OpenGL –∫–æ–Ω—Ç–µ–∫—Å—Ç –∞–∫—Ç–∏–≤–µ–Ω!")
                
                if imgui.button("–¢–µ—Å—Ç –∫–Ω–æ–ø–∫–∏"):
                    print("üîò –ö–Ω–æ–ø–∫–∞ –Ω–∞–∂–∞—Ç–∞!")
                    
                if imgui.button("–í—ã—Ö–æ–¥"):
                    print("‚ùå –í—ã—Ö–æ–¥ —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É")
                    running = False
                    
                imgui.separator()
                imgui.text("–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
                imgui.bullet_text("–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å raymarcher")
                imgui.bullet_text("–°–∏—Å—Ç–µ–º–∞ –æ–±–ª–∞—Å—Ç–µ–π")
                imgui.bullet_text("–†–µ–¥–∞–∫—Ç–æ—Ä—ã —Å—Ü–µ–Ω—ã")
                
            imgui.end()
            
            # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ –æ–∫–Ω–æ
            if imgui.begin("System Info"):
                imgui.text(f"Frame: {frame_count}")
                imgui.text(f"FPS: {clock.get_fps():.1f}")
                imgui.text(f"Window size: {size[0]}x{size[1]}")
                imgui.text(f"ImGui version: {imgui.get_version()}")
                
            imgui.end()
            
            # –†–µ–Ω–¥–µ—Ä–∏–Ω–≥
            pygame.display.get_surface().fill((30, 30, 30))
            
            imgui.render()
            renderer.render(imgui.get_draw_data())
            
            pygame.display.flip()
            clock.tick(60)
            
        print("üîÑ –í—ã—Ö–æ–¥ –∏–∑ –≥–ª–∞–≤–Ω–æ–≥–æ —Ü–∏–∫–ª–∞")
        renderer.shutdown()
        pygame.quit()
        
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ main(): {e}")
        import traceback
        traceback.print_exc()
        return False
        
    return True

if __name__ == "__main__":
    print("üèóÔ∏è Intel Render Engine - Level Editor Test")
    print("=" * 50)
    
    try:
        success = main()
        if success:
            print("üëã Level Editor Test –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        else:
            print("‚ùå Level Editor Test –∑–∞–≤–µ—Ä—à–µ–Ω —Å –æ—à–∏–±–∫–∞–º–∏")
    except KeyboardInterrupt:
        print("\nüõë –ü—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
